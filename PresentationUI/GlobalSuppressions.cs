// <copyright file="GlobalSuppressions.cs" company="PlaceholderCompany">
// Copyright (c) PlaceholderCompany. All rights reserved.
// </copyright>

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.MainWindow.#ctor(BLL.Services.Interfaces.IUserService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.MainWindow.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1404:Code analysis suppression should have justification", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.LoginWindow.#ctor(BLL.Services.Interfaces.IUserService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.App.OnStartup(System.Windows.StartupEventArgs)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~P:PresentationUI.App.AppHost")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.App.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.App.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.App.OnExit(System.Windows.ExitEventArgs)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.RegisterWindow.#ctor(BLL.Services.Interfaces.IUserService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.GuestListWindow.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.GuestAddWindow.#ctor")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.RecipeListWindow.#ctor(PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.NavigationService.#ctor(System.IServiceProvider)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.NavigationService")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.MainWindow.#ctor(BLL.Services.Interfaces.IUserService,PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.LoginWindow.#ctor(BLL.Services.Interfaces.IUserService,PresentationUI.INavigationService,Microsoft.Extensions.Logging.ILogger{PresentationUI.LoginWindow})")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.INavigationService")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IRegisterWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IMainWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.ILoginWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IGuestListWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IGuestAddWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IAccountWindow")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1600:Elements should be documented", Justification = "<Pending>", Scope = "type", Target = "~T:PresentationUI.IAccount")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.GuestListWindow.#ctor(BLL.Services.Interfaces.IGuestService,PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1611:Element parameters should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.AccountWindow.#ctor(DAL.Models.User,PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.EventListWindow.#ctor(PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1611:Element parameters should be documented", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.RegisterWindow.#ctor(BLL.Services.Interfaces.IUserService,PresentationUI.INavigationService,Microsoft.Extensions.Logging.ILogger{PresentationUI.RegisterWindow})")]
[assembly: SuppressMessage("StyleCop.CSharp.ReadabilityRules", "SA1115:Parameter should follow comma", Justification = "<Pending>")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.EventAddWindow.#ctor(PresentationUI.INavigationService)")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:PresentationUI.EventAddWindow.comboBoxList")]
[assembly: SuppressMessage("StyleCop.CSharp.OrderingRules", "SA1201:Elements should appear in the correct order", Justification = "<Pending>", Scope = "member", Target = "~F:PresentationUI.EventAddWindow.comboBoxDishesList")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1614:Element parameter documentation should have text", Justification = "<Pending>", Scope = "member", Target = "~M:PresentationUI.GuestAddWindow.#ctor(BLL.Services.Interfaces.IGuestService,PresentationUI.INavigationService,Microsoft.Extensions.Logging.ILogger{PresentationUI.GuestAddWindow})")]
